pipeline {
    agent any

    tools {
        nodejs 'nodejs'
    }

    environment {
        GITHUB_API_URL = 'https://api.github.com'
        GITHUB_REPO_OWNER = 'JEGGERaS'
        GITHUB_REPO_NAME = 'frontend'
        GITHUB_CREDENTIALS_ID = 'JenkinsToken'
    }

    parameters {
        string(name: 'BRANCH_NAME', description: 'Enter the branch name', defaultValue: 'main')
    }

    stages {        
        stage('Checkout') {
            steps {
                script {
                    def repoURL = 'https://github.com/JEGGERaS/frontend.git'
                    
                    // Clone the repository with the specified branch
                    checkout([
                        $class: 'GitSCM',
                        branches: [[name: "refs/heads/${params.BRANCH_NAME}"]],
                        doGenerateSubmoduleConfigurations: false,
                        extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'frontend-clones']],
                        userRemoteConfigs: [[url: repoURL]]
                    ])
                }
            }
        }
        
        stage('Install Dependencies') {
            steps {
                // Navigate to your Next.js project directory
                dir('frontend-clones') {
                    // Install npm dependencies
                    sh 'npm install'
                }
            }
        }

        stage('Run Tests') {
            steps {
                // Navigate to your Next.js project directory
                dir('frontend-clones') {
                    // Run npm tests
                    sh 'npm test'
                }
            }
        }
        
        stage('Build') {
            steps {
                // Navigate to your Next.js project directory
                dir('frontend-clones') {
                    // Build the Next.js project
                    sh 'npm run build'
                }
            }
        }
    }
    
post {
    success {
        script {
            sh """
            curl -X POST \
                -H 'Authorization: token ${withCredentials([string(credentialsId: 'JenkinsToken', variable: 'GITHUB_TOKEN')]) { env.GITHUB_TOKEN }}' \
                -H 'Accept: application/vnd.github.v3+json' \
                ${GITHUB_API_URL}/repos/${GITHUB_REPO_OWNER}/${GITHUB_REPO_NAME}/statuses/\${GIT_COMMIT} \
                -d '{
                    "state": "success",
                    "context": "Jenkins CI",
                    "description": "Build has succeeded!",
                    "target_url": "${BUILD_URL}"
                }'
            """
        }
    }
    failure {
        script {
            sh """
            curl -X POST \
                -H 'Authorization: token ${withCredentials([string(credentialsId: 'JenkinsToken', variable: 'GITHUB_TOKEN')]) { env.GITHUB_TOKEN }}' \
                -H 'Accept: application/vnd.github.v3+json' \
                ${GITHUB_API_URL}/repos/${GITHUB_REPO_OWNER}/${GITHUB_REPO_NAME}/statuses/\${GIT_COMMIT} \
                -d '{
                    "state": "failure",
                    "context": "Jenkins CI",
                    "description": "Build has failed!",
                    "target_url": "${BUILD_URL}"
                }'
            """
        }
    }
}
}
