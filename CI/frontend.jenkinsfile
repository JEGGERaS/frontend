pipeline {
    agent any

    options {
        buildDiscarder(logRotator(numToKeepStr: '5'))
    }

    tools {
        nodejs 'nodejs'
    }

    environment {
        GITHUB_API_URL = 'https://api.github.com'
        GITHUB_REPO_OWNER = 'JEGGERaS'
        GITHUB_REPO_NAME = 'frontend'
        GITHUB_CREDENTIALS_ID = 'JenkinsToken'
    }

    stages {

        stage('Set GitHub Status to Pending') {
            steps {
                script {
                    setBuildStatus('Jenkins CI (Pending...)', 'PENDING')
                }
            }
        }

        stage('Checkout') {
            steps {
                script {
                    def repoURL = 'https://github.com/JEGGERaS/frontend.git'
                    def branchName = env.CHANGE_BRANCH ?: env.BRANCH_NAME
                    
                    // Clone the repository with the specified branch
                    checkout([
                        $class: 'GitSCM',
                        branches: [[name: "refs/heads/${branchName}"]],
                        doGenerateSubmoduleConfigurations: false,
                        extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'frontend-clones']],
                        userRemoteConfigs: [[url: repoURL, credentialsId: GITHUB_CREDENTIALS_ID]]
                    ])
                }
            }
        }
        
        stage('Install Dependencies') {
            steps {
                // Navigate to your Next.js project directory
                dir('frontend-clones') {
                    // Install npm dependencies
                    sh 'npm install'
                }
            }
        }

        stage('Run Tests') {
            steps {
                // Navigate to your Next.js project directory
                dir('frontend-clones') {
                    // Run npm tests
                    sh 'npm test'
                }
            }
        }
        
        stage('Build') {
            steps {
                // Navigate to your Next.js project directory
                dir('frontend-clones') {
                    // Build the Next.js project
                    sh 'npm run build'
                }
            }
        }
    }

post {
    success {
        setBuildStatus("Jenkins CI (Success)", "SUCCESS");
    }
    failure {
        setBuildStatus("Jenkins CI (Failure)", "FAILURE");
    }
  }

}

def setBuildStatus(message, state){
        def reposSource = [$class: "ManuallyEnteredRepositorySource", url: "https://github.com/JEGGERaS/frontend"]
        def contextSource = [$class: "ManuallyEnteredCommitContextSource", context: "ci/jenkins/build-status"]
        def errorHandlers = [[$class: "ChangingBuildStatusErrorHandler", result: "UNSTABLE"]]
        def statusResultSource = [ $class: "ConditionalStatusResultSource", results: [[$class: "AnyBuildResult", message: message, state: state]] ]

        step([
            $class: "GitHubCommitStatusSetter",
            reposSource: reposSource,
            contextSource: contextSource,
            errorHandlers: errorHandlers,
            statusResultSource: statusResultSource
        ]);
    }
